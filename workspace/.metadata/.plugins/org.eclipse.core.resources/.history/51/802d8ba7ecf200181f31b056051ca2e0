package com.passer.hibernate;

import java.beans.BeanInfo;
import java.beans.IntrospectionException;
import java.beans.Introspector;
import java.beans.PropertyDescriptor;
import java.lang.reflect.Field;

import com.passer.anno.ID;
import com.passer.anno.Table;
import com.passer.domain.User;

public class HibernateMock {

	/**
	 * 从注解中获取模型对象对应的表名
	 * @param obj		需要获取表名的模型对象
	 * @return			返回相应的表名,如果未在注解中写上表名,返回该模型对象类名
	 */
	private static String getTableName(Object obj) {
		Class<?> clz = obj.getClass();
		Table table = (Table) clz.getDeclaredAnnotation(Table.class);
		return table.value() == null ? obj.getClass().getSimpleName() : table.value();
	}
	
	/**
	 * 判断对象对应字段是否是主键字段
	 * @param obj			需要查询的对象
	 * @param fieldName		对应的字段名
	 * @return				若对应字段上有ID注解，则返回true，否则返回false
	 */
	private static boolean isPrimaryKey(Object obj,String fieldName) {
		Field[] fields = obj.getClass().getDeclaredFields();
		for (Field field : fields) {
			if(fieldName.equals(field.getName())&&field.isAnnotationPresent(ID.class)) {
				return true;
			}
		}
		return false;
	}
	/**
	 * HibernateMock保存对象操作
	 * @param obj		需要保存的对象
	 */
	public static void save(Object obj) {
		StringBuilder sql = new StringBuilder(80);
		sql.append("INSERT INTO ");
		String tableName = getTableName(obj);
		sql.append(tableName);
		sql.append(" (");
		StringBuilder strProperties = new StringBuilder(50);
		StringBuilder strQuestionMark = new StringBuilder(50);
		
		try {
			BeanInfo beanInfo = Introspector.getBeanInfo(obj.getClass(),Object.class);
			PropertyDescriptor[] pds = beanInfo.getPropertyDescriptors();
			for (PropertyDescriptor pd : pds) {
				if(isPrimaryKey(obj,pd.getName())) {
					continue;
				}
				strProperties.append(pd.getName());
				strProperties.append(",");
				strQuestionMark.append("?,");
			}
		} catch (IntrospectionException e) {
			e.printStackTrace();
		}
		//删除最后多余的逗号
		strProperties.deleteCharAt(strProperties.length()-1);
		//删除最后多余的问号
		strQuestionMark.deleteCharAt(strQuestionMark.length()-1);
		sql.append(strProperties);
		sql.append(") VALUES(");
		sql.append(strQuestionMark);
		sql.append(")");
		System.out.println(sql);
	}
	
	public static void main(String[] args) {
		save(new User());
	}
}
